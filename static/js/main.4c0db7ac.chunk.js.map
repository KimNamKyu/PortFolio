{"version":3,"sources":["Component/Header.js","Container/MainPage.js","Component/About.js","Component/Skill.js","Component/Project.js","Container/ContentPage.js","App.js","serviceWorker.js","index.js","Image/main.jpg"],"names":["Header","props","styles","Head","Layout","console","log","menuCss","menu","overflow","width","height","position","transition","top","background","menu_activate","style","GithubOutlined","onClick","window","open","fontSize","paddingRight","mode","float","borderBottom","paddingLeft","map","item","index","Item","textDecoration","MainPage","Content","maxHeight","padding","display","backgroundSize","backgroundPosition","backgroundColor","opacity","left","backgroundImage","img","About","Step","Steps","step","title","description","subject","content","useState","current","setCurrent","margin","textAlign","paddingTop","direction","onChange","key","className","marginTop","border","borderRadius","minHeight","Skill","Project","ContentPage","paddingBottom","App","React","scrollFlag","setScroll","documentRef","useRef","document","handelScroll","pageYOffset","useEffect","addEventListener","removeEventListener","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.4c0db7ac.chunk.js","sourcesContent":["import React from 'react';\nimport { Layout, Menu } from 'antd';\nimport { GithubOutlined } from '@ant-design/icons';\nfunction Header(props) {\n  const { Header: Head } = Layout;\n\n  console.log(props.menuCss)\n  let styles\n  if(props.menuCss === 'menu'){\n     styles = {\n      menu: {overflow: 'hidden', width: '100%', height: '65px', position: 'absolute',transition: 'background 0.3s ease-in 0s', top: 0, background: 'rgba(255,255,255,0.0)'},\n    }\n  }else{\n    styles = {\n      menu_activate:{overflow:'visible', height: '65px', position: 'fixed', background: 'rgba(255, 255, 255, 0.9)', width:'100%', transition: 'background 0.3s ease-in 0s', top: 0}\n    }\n  }\n  return (\n    <Layout>\n      {/* <Head style={{ width: '100%', height: '65px', position: 'absolute', zindex: '10000', transition: 'background 0.3s ease-in 0s', top: 0, background: 'rgba(255,255,255,0.0)' }} }}> */}\n      <Head style={props.menuCss === 'menu' ? styles.menu : styles.menu_activate} >\n        <GithubOutlined onClick={() => {\n          window.open('https://github.com/KimNamKyu')\n        }}\n          style={{ fontSize: '24px', paddingRight: '30px' }} />\n        <span style={{ fontSize: '24px' }}>Southkyu PortFolio</span>\n        <Menu mode=\"horizontal\" style={{ float: 'right', borderBottom: '#fff', paddingLeft: '15px', background: 'rgba(255,255,255,0.0)', fontSize: '18px' }}>\n          {['Home', 'About', 'Skill', 'Project'].map((item, index) => (\n            <Menu.Item style={{ textDecoration: \"underline\" }}>{item}</Menu.Item>\n          ))}\n        </Menu>\n      </Head>\n    </Layout>\n  );\n}\n\nexport default Header;","import React from 'react';\nimport { Layout } from 'antd';\nimport img from '../Image/main.jpg'\nfunction MainPage(props) {\n  const { Content } = Layout\n  // , zIndex: 0\n  return (\n    <div style={{ position: \"fixed\", width: '100%', top: 0 }}>    \n      <Layout style={{ position: 'relative', maxHeight: 'none!important' }}>\n        <Content style={{ padding: 0, display: 'block', backgroundSize: 'cover', backgroundPosition: '50% 50%' }}>\n          <div style={{ height: '946px', padding: 0, display: 'block', backgroundColor: '#000', opacity: .3, top: 0, left: 0, width: '100%', position: 'absolute', backgroundImage: `url(${img})` }}>\n          </div>\n        </Content>\n      </Layout>\n    </div>\n  );\n}\n\nexport default MainPage;","import React, { useState } from 'react';\nimport { Layout, Steps } from 'antd';\n\nfunction About(props) {\n    const { Content } = Layout\n    const { Step } = Steps\n    const step = [\n        {\n            title: '강원대학교',\n            description: \"2013/02 ~ 2019/02\",\n            subject: '강원대학교 컴퓨터공학과 졸업',\n            content: '정보처리기사 취득 및 실시간 협업 안드로이드 어플리케이션 개발',\n        },\n        {\n            title: '(주)한국동서발전',\n            description: \"2018/07 ~ 2018/08\",\n            subject: '(주)한국동서발전 인턴',\n            content: '외부방문자를 위한 내선번호 안내시스템 개발'\n        },\n        {\n            title: '응용 SW개발자 양성과정',\n            description: \"2018/09 ~ 2019/03\",\n            subject: '응용 SW개발자 양성과정 수료',\n            content: ''\n        },\n        {\n            title: '더존비즈온',\n            description: \"2019/04 ~ \",\n            subject: '더존비즈온',\n            content: 'WEHAGO 플랫폼 개발/운영',\n        }\n    ]\n    const [current, setCurrent] = useState(3);\n\n    return (\n        <Content style={{ height: '946px', background: 'yellow', padding: \"100px 50px 100px 50px\", margin: '0 auto', width: '80%' }}>\n            <div style={{ borderBottom: '2px dashed #e9e9e9' }}><h2 style={{ textAlign: 'center', fontSize: '38px' }}>About</h2></div>\n                <div style={{height:'250px', background:'blue'}}>\n                    test\n                </div>\n            <div style={{ borderBottom: '2px dashed #e9e9e9' }}><h2 style={{ textAlign: 'center', fontSize: '38px' }}>Career</h2></div>\n            <div>\n                <div style={{ position: 'absolute', float: 'left', width: '40%', paddingTop: '50px' }}>\n                    <Steps current={current} direction=\"vertical\"\n                        onChange={(index) => { setCurrent(index) }}>\n                        {step.map(item => (\n                            <Step key={item.title} title={item.title} description={item.description} />\n                        ))}\n                    </Steps>\n                </div>\n\n                <div className=\"steps-content\" style={{\n                    marginTop: '16px',\n                    border: '1px dashed #e9e9e9',\n                    borderRadius: '2px',\n                    backgroundColor: 'white',\n                    minHeight: '300px',\n                    textAlign: 'left',\n                    padding: '50px 30px 50px 30px',\n                    float: 'right',\n                    width: '50%',\n                    fontSize: '16px'\n                }}><span style={{fontSize:'18px'}}>{step[current].subject}</span><br />{step[current].content}</div>\n            </div>\n        </Content>\n    );\n}\n\nexport default About;\n\n","import React from 'react';\nimport { Layout } from 'antd';\n\nfunction Skill(props) {\n    const { Content } = Layout\n    return (\n        <Content style={{ height: '946px', background: 'green', padding: \"100px 50px 100px 50px\", margin: '0 auto', width: '80%' }}>\n\n        </Content>\n    );\n}\n\nexport default Skill;","import React from 'react';\nimport { Layout } from 'antd';\n\nfunction Project(props) {\n    const { Content } = Layout\n    return (\n        <Content style={{ height: '946px', background: 'lightblue', padding: \"100px 50px 100px 50px\", margin: '0 auto', width: '80%' }}>\n            \n        </Content>\n            );\n        }\n        \nexport default Project;","import React from 'react';\nimport { Layout } from 'antd';\nimport About from '../Component/About';\nimport Skill from '../Component/Skill';\nimport Project from '../Component/Project';\nfunction ContentPage(props) {\n    return (\n        <div style={{ position: 'relative',background: '#fff', marginTop: '945px', paddingBottom: '54px'}}>\n            <Layout style={{background:'white'}}>\n                <About />\n                <Skill />\n                <Project />\n            </Layout>\n        </div>\n    );\n}\n\nexport default ContentPage;","import React, { useEffect, useRef } from 'react';\nimport Header from './Component/Header';\nimport \"./App.css\";\nimport 'antd/dist/antd.css';\nimport MainPage from './Container/MainPage';\nimport ContentPage from './Container/ContentPage';\n\nfunction App() {\n  const [scrollFlag, setScroll] = React.useState(false)\n  const documentRef = useRef(document);\n\n  const handelScroll = () => {\n    const { pageYOffset } = window;\n\n    if (pageYOffset > 964) {\n      setScroll(true)\n    } else {\n      setScroll(false)\n    }\n  }\n  useEffect(() => {\n    documentRef.current.addEventListener('scroll', handelScroll);\n    return () => documentRef.current.removeEventListener('scroll', handelScroll);\n  }, [scrollFlag])\n\n\n\n  let className = 'menu'\n  if (scrollFlag) {\n    className = 'menu_activate'\n  } else {\n    className = 'menu'\n  }\n\n  return (\n    <div style={{ overflow: 'hidden' }} >\n      <MainPage />\n      <ContentPage />\n      <Header menuCss={className} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/main.833bbfcb.jpg\";"],"sourceRoot":""}